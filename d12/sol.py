initial_state = '.##..##..####..#.#.#.###....#...#..#.#.#..#...#....##.#.#.#.#.#..######.##....##.###....##..#.####.#'
test_initial_state = '#..#.#..##......###...###'

test_rules = {
    "...##": "#",
    "..#..": "#",
    ".#...": "#",
    ".#.#.": "#",
    ".#.##": "#",
    ".##..": "#",
    ".####": "#",
    "#.#.#": "#",
    "#.###": "#",
    "##.#.": "#",
    "##.##": "#",
    "###..": "#",
    "###.#": "#",
    "####.": "#"
}

rules = {
    ".#...": "#",
    "#....": ".",
    "#.###": ".",
    "#.##.": ".",
    "#...#": ".",
    "...#.": ".",
    ".#..#": "#",
    ".####": "#",
    ".###.": ".",
    "###..": "#",
    "#####": ".",
    "....#": ".",
    ".#.##": "#",
    "####.": ".",
    "##.#.": "#",
    "#.#.#": "#",
    "..#.#": ".",
    ".#.#.": "#",
    "###.#": "#",
    "##.##": ".",
    "..#..": ".",
    ".....": ".",
    "..###": "#",
    "#..##": "#",
    "##...": "#",
    "...##": "#",
    "##..#": ".",
    ".##..": "#",
    "#..#.": ".",
    "#.#..": "#",
    ".##.#": ".",
    "..##.": ".",
}


def result(neighborhood, rules):
    key = ''.join(neighborhood)
    if key in rules:
        plant = rules[key]
    else:
        plant = '.'
    return plant


def solve(current, rules):
    current = list(current)
    extendBy = ''.join(list(current)[-5:]).rindex('#')
    next_state = ['.'] * len(current)
    current.extend(['.'] * extendBy)
    for i, _ in enumerate(current):
        if i <= 1 or i + 5 > len(current):
            continue
        next_state[i] = result(current[i-2: i+3], rules)
    print(''.join(next_state))

